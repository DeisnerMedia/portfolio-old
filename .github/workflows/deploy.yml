name: Live deployment Job

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
    
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v3
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.18.2'

    - name: Install dependencies
      run: |
        npm install

    - name: Install build
      run: |
        npm run build
        ls
    - uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: out

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
        path: out
  
    - name: Building Next.js application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd public_html
          rm -rf tempPortfolio
          mkdir tempPortfolio
          ls -R ${{ github.workspace }}
          cp -r out/* tempPortfolio
          ls
